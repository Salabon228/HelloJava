public class Main {
    public static void main(String[] args) {
        String s = "stroka";
        System.out.println(s.charAt(2));     // charAt() позволяет обратиться к элементу строки
        s.length();                          // длина строки
    }


}
    // Много изменений – String
    // Много преобразований – StringBuilder

    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < 1_000_000; i++) {
        sb.append("+");
    }

concat(): объединение строк
valueOf(): преобразует Object в строковое представление (завязан на toString())
join(): объединяет набор строк в одну с учетом разделителя
charAt(): получение символа по индексу
indexOf(): первый индекс вхождения подстроки
lastIndexOf(): последний индекс вхождения подстроки
startsWith()/endsWith(): определяет, начинается/заканчивается ли строка с подстроки
replace(): замена одной подстроки на другую
trim(): удаляет начальные и конечные пробелы
substring(): возвращает подстроку, см.аргументы
toLowerCase()/toUpperCase(): возвращает новую строку в нижнем/верхнем регистре
сompareTo(): сравнивает две строки
equals(): сравнивает строки с учетом регистра
equalsIgnoreCase(): сравнивает строки без учета регистра
regionMatches(): сравнивает подстроки в строках

            public class program {
              public static void main(String[] args) {
                String[] name = { "C", "е", "р", "г", "е", "й" };
                String sk = "СЕРГЕЙ КА.";
                System.out.println(sk.toLowerCase()); // сергей ка.
                System.out.println(String.join("", name)); // Cергей
                System.out.println(String.join("", "C", "е", "р", "г", "е", "й"));
                // C,е,р,г,е,й
                System.out.println(String.join(",", "C", "е", "р", "г", "е", "й"));
               }
            }


